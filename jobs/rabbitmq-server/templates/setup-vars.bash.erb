<% if_p("rabbitmq-server.ssl.enabled") do

    supported_tls_versions = ['tlsv1', 'tlsv1.1', 'tlsv1.2', 'tlsv1.3']

    tls_versions = p('rabbitmq-server.ssl.versions')

    tls_versions.respond_to?('map') or
      raise "Expected rabbitmq-server.ssl.versions to be a collection"

    tls_versions = tls_versions.map do |v|
      supported_tls_versions.include?(v) or
        raise "#{v} is a not supported tls version"

    if tls_versions.include?('tlsv1.3') && (tls_versions.include?('tlsv1.1') || tls_versions.include?('tlsv1'))
      raise "TLS 1.3 cannot be enabled along with TLS 1.1 and TLS 1.0"
    end

      # make sure the erlang atom is quoted by one and
      # only one single quote
      "'#{v}'".gsub(/^'+|'+$/, "'")
    end
    tls_versions = '[' + tls_versions.join(',') + ']'

    tls_ciphers = ''
    if_p('rabbitmq-server.ssl.ciphers') do |ciphers|
      ciphers.respond_to?('map') or
        raise "Expected rabbitmq-server.ssl.ciphers to be a collection"

      tls_ciphers = ciphers.map do |c|
        /^[a-zA-Z0-9\-\_]+$/.match(c) or raise "#{c} is not a valid cipher suite"
        "\\\"#{c}\\\"".gsub(/^'+|'+$/, "'")
      end.join(',')
      tls_ciphers = ",{ciphers,[#{tls_ciphers}]}"

    end
%>
  export SSL_ENABLED="<%= p("rabbitmq-server.ssl.enabled") %>"
  export SSL_SUPPORTED_TLS_VERSIONS="<%= tls_versions %>"
  export SSL_SUPPORTED_TLS_CIPHERS="<%= tls_ciphers %>"
  export SSL_VERIFY="<%= p("rabbitmq-server.ssl.verify") %>"
  export SSL_VERIFICATION_DEPTH="<%= p("rabbitmq-server.ssl.verification_depth") %>"
  export SSL_FAIL_IF_NO_PEER_CERT="<%= p("rabbitmq-server.ssl.fail_if_no_peer_cert") %>"
  export SSL_ENABLED_ON_MANAGEMENT="<%= p("rabbitmq-server.management_tls.enabled") %>"
  export SSL_DISABLE_NON_SSL_LISTENERS="<%= p("rabbitmq-server.ssl.disable_non_ssl_listeners") %>"
<% end %>


export CLUSTER_PARTITION_HANDLING="<%= p("rabbitmq-server.cluster_partition_handling") %>"
export DISK_ALARM_THRESHOLD="<%= p("rabbitmq-server.disk_alarm_threshold") %>"

export CLUSTER_NAME="<%= p("rabbitmq-server.cluster_name") %>"

<% if_p("rabbitmq-server.config") do |config|
  config_file = 'rabbitmq.conf'
  if config != 'W10u'
    config_file = 'rabbitmq.config'
end
%>
config_file="/var/vcap/jobs/rabbitmq-server/etc/<%= config_file %>"
<% end %>

advanced_config_file="/var/vcap/jobs/rabbitmq-server/etc/advanced.config"
