#!/usr/bin/env bash

set -e

[ -z "$DEBUG" ] || set -x

export BOSH_ENVIRONMENT="${BOSH_ENVIRONMENT:-https://192.168.50.6:25555}"
export BOSH_NON_INTERACTIVE="${BOSH_NON_INTERACTIVE:-false}"
export BOSH_CLIENT="${BOSH_CLIENT:-admin}"
export BOSH_CLIENT_SECRET="${BOSH_CLIENT_SECRET:-admin}"
export BOSH_CA_CERT="${BOSH_CA_CERT:-"$(boshgo int ~/deployments/vbox/creds.yml --path /director_ssl/ca)"}"
export BOSH_DEPLOYMENT="${BOSH_DEPLOYMENT:-cf-rabbitmq}"

export BOSH_MANIFEST=${1:-$("$HOME/workspace/cf-rabbitmq-release/scripts/interpolate-manifest-for-bosh-lite")}

main() {
  upload_stemcell "$BOSH_MANIFEST"
  download_blobs
  create_dev_release && upload_dev_release
  deploy "$BOSH_MANIFEST"
}

upload_stemcell() {
  BOSH_LITE_STEMCELL_NAME="bosh-warden-boshlite-ubuntu-trusty-go_agent"
  BOSH_LITE_STEMCELL_VERSION="$(yq .stemcells[0].version "$BOSH_MANIFEST")"
  BOSH_LITE_STEMCELL_URL="https://bosh.io/d/stemcells/$BOSH_LITE_STEMCELL_NAME?v=$BOSH_LITE_STEMCELL_VERSION"

  bosh upload-stemcell "$BOSH_LITE_STEMCELL_URL" --name "$BOSH_LITE_STEMCELL_NAME" --version "$BOSH_LITE_STEMCELL_VERSION"
}

download_blobs() {
  bosh sync-blobs
}

create_dev_release() {
  bosh create-release --force
}

upload_dev_release() {
  bosh upload-release
}

deploy() {
  bosh deploy --no-redact "$BOSH_MANIFEST"
}

main
