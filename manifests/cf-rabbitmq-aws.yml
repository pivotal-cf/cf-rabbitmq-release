director_uuid: 11111111-1111-1111-1111-111111111111
name: cf-rabbitmq

releases:
- name: cf-rabbitmq
  version: latest

jobs:
- name: rmq
  release: cf-rabbitmq
  template: rabbitmq-server
  instances: 1
  resource_pool: services-small
  persistent_disk: 2048
  networks:
  - name: services1
    static_ips:
    - 10.10.38.6

- name: rmq-broker
  release: cf-rabbitmq
  template: rabbitmq-broker
  instances: 1
  resource_pool: services-small
  networks:
  - name: services1
    static_ips:
    - 10.10.38.7

- name: haproxy
  release: cf-rabbitmq
  template: rabbitmq-haproxy
  instances: 1
  resource_pool: services-small
  networks:
  - name: services1
    static_ips:
    - 10.10.38.8

- name: broker-registrar
  release: cf-rabbitmq
  template: broker-registrar
  instances: 1
  lifecycle: errand
  networks:
  - name: services1
  properties:
    broker:
      host: pivotal-rabbitmq-broker.your_cc_endpoint.com
      name: p-rabbitmq
      username: "p1-rabbit"
      password: "p1-rabbit-default-password"
  resource_pool: services-small

- name: broker-deregistrar
  release: cf-rabbitmq
  template: broker-deregistrar
  instances: 1
  lifecycle: errand
  networks:
  - name: services1
  properties:
    broker:
      host: pivotal-rabbitmq-broker.your_cc_endpoint.com
      name: p-rabbitmq
      username: "p1-rabbit"
      password: "p1-rabbit-default-password"
  resource_pool: services-small

- name: smoke-tests
  release: cf-rabbitmq
  template: smoke-tests
  instances: 1
  lifecycle: errand
  networks:
  - name: services1
  properties:
    broker:
      name: p-rabbitmq
  resource_pool: services-small

properties:
  # for broker and route registrars
  cf:
    domain: api.your_cc_endpoint.com
    admin_password: your-cf-password
    admin_username: admin
    api_url: "http://api.your_cc_endpoint.com"
  route_registrar:
    message_bus_servers: 
      - host: 10.10.80.11:4222
        user: "your-nats-username"
        password: "your-nats-password"
  rabbitmq-server:
    plugins:
    - rabbitmq_management
    - rabbitmq_mqtt
    - rabbitmq_stomp
    administrators:
      broker:
        username: broker
        password: thebrokersrabbitpassword
    static_ips:
    - 10.10.38.6
    ssl:
      verify: false
      fail_if_no_peer_cert: false
      cert: |
        -----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----
      key: |
        -----BEGIN RSA PRIVATE KEY-----
        -----END RSA PRIVATE KEY-----
      cacert: |
        -----BEGIN CERTIFICATE-----
        -----END CERTIFICATE-----
  rabbitmq-haproxy:
    ports:
    - 5672
    - 5671
    - 1883
    - 8883
    - 61613
    - 61614
    - 15672
    - 15674
    server_ips:
    - 10.10.38.6
    stats:
      username: admin
      password: admin
  rabbitmq-broker:
    route: pivotal-rabbitmq-broker
    ip: 10.10.38.7
    cc_endpoint: http://your_cc_endpoint.com
    service:
      username: "p1-rabbit"
      password: "p1-rabbit-default-password"
      name: p-rabbitmq
      uuid: 163b47c6-a2f3-43b1-97f7-b83b37ecabcd
      plan_uuid: 4e816145-4e71-4e24-a402-0c686b868e2d
    logging:
      level: debug
      print_stack_traces: false
    rabbitmq:
      operator_set_policy:
        enabled: true
        policy_name: "operator_set_policy"
        policy_definition: "{\"ha-mode\":\"exactly\",\"ha-params\":2,\"ha-sync-mode\":\"automatic\"}"
        policy_priority: 50
      management_domain: pivotal-rabbitmq.your_cc_endpoint.com
      management_ip: "10.10.38.8"
      ssl: |
        -----BEGIN CERTIFICATE-----
        ****** KEY GOES HERE **********
        -----END CERTIFICATE-----
      hosts:
        - 10.10.38.8
      administrator:
        username: broker
        password: thebrokersrabbitpassword

networks:
- name: services1
  type: manual
  subnets:
  - range: 10.10.38.0/24
    gateway: 10.10.38.1
    # Amazon reserves the first four IPs and the last IP for networking purposes
    reserved:
    - 10.10.38.2 - 10.10.38.4
    - 10.10.38.254
    static:
    - 10.10.38.6 - 10.10.38.8
    dns:
    - 10.10.0.6
    cloud_properties:
      subnet: subnet-111111111
- name: vip_network
  type: vip
  # Fake network properties to satisfy bosh diff
  subnets:
  - range: 127.0.99.0/24
    gateway: 127.0.99.1
    dns:
    - 127.0.99.250
  cloud_properties:
    security_groups:
    - bosh


resource_pools:
- cloud_properties:
    instance_type: m3.medium
  name: services-small
  network: services1
  size: 4
  stemcell:
    name: bosh-aws-xen-ubuntu-trusty-go_agent
    version: latest

meta:
  stemcell:
    name:
    version: latest

update:
  canaries: 1
  canary_watch_time: 30000-180000
  update_watch_time: 30000-180000
  max_in_flight: 4

compilation:
  cloud_properties:
    instance_type: m3.medium
  network: services1
  reuse_compilation_vms: true
  workers: 3
